{"ast":null,"code":"var _jsxFileName = \"/home/epc/CT_VR/CTVR/src/pages/datapass/modalpage.js\";\nimport { Modal, Button } from 'antd';\nimport React from 'react';\nexport default class ModalPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading,\n          ModalText = _this$state.ModalText;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Open Modal with async logic\"), React.createElement(Modal, {\n      title: \"Title\",\n      visible: visible,\n      onOk: this.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, ModalText)));\n  }\n\n}","map":{"version":3,"sources":["/home/epc/CT_VR/CTVR/src/pages/datapass/modalpage.js"],"names":["Modal","Button","React","ModalPage","Component","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","console","log","render"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACrDC,KADqD,GAC7C;AACNC,MAAAA,SAAS,EAAE,sBADL;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAD6C;;AAAA,SAOrDC,SAPqD,GAOzC,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAXoD;;AAAA,SAarDI,QAbqD,GAa1C,MAAM;AACf,WAAKD,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,4CADC;AAEZE,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAIAI,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKF,QAAL,CAAc;AACZH,UAAAA,OAAO,EAAE,KADG;AAEZC,UAAAA,cAAc,EAAE;AAFJ,SAAd;AAID,OALS,EAKP,IALO,CAAV;AAMD,KAxBoD;;AAAA,SA0BrDK,YA1BqD,GA0BtC,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAKL,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA/BoD;AAAA;;AAiCrDS,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKX,KAD7C;AAAA,UACCE,OADD,eACCA,OADD;AAAA,UACUC,cADV,eACUA,cADV;AAAA,UAC0BF,SAD1B,eAC0BA,SAD1B;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKG,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,OAAO,EAAEF,OAFX;AAGE,MAAA,IAAI,EAAE,KAAKI,QAHb;AAIE,MAAA,cAAc,EAAEH,cAJlB;AAKE,MAAA,QAAQ,EAAE,KAAKK,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIP,SAAJ,CAPF,CAJF,CADF;AAgBD;;AAnDoD","sourcesContent":["import { Modal, Button } from 'antd';\nimport React from 'react';\n\nexport default class ModalPage extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Open Modal with async logic\n        </Button>\n        <Modal\n          title=\"Title\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <p>{ModalText}</p>\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}